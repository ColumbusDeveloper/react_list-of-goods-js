{"version":3,"sources":["components/Button/Button.jsx","App.jsx","index.jsx"],"names":["Button","btn","searchField","setSearchField","goodsRender","setGoodsRender","goodsToSet","goods","field","goodsToRend","sort","good1","good2","name","localeCompare","length","getGoodsToRend","goodsFromServerModObj","type","className","cn","onClick","reverse","goodsFromServer","map","item","id","indexOf","btns","buttons","App","useState","ReactDOM","render","document","getElementById"],"mappings":"gPA6BO,IAAMA,EAAS,SAAC,GACwB,IADtBC,EACqB,EADrBA,IAAKC,EACgB,EADhBA,YAAaC,EACG,EADHA,eAAgBC,EACb,EADaA,YACzDC,EAA4C,EAA5CA,eACMC,EAvBR,SAAwBC,EAAOC,GAC7B,IAAMC,EAAW,YAAOF,GAiBxB,OAfIC,GACFC,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQJ,GACN,IAXsB,sBAapB,OAAOG,EAAME,KAAKC,cAAcF,EAAMC,MACxC,IAboB,iBAelB,OAAOF,EAAME,KAAKE,OAASH,EAAMC,KAAKE,OACxC,QACE,OAAO,MAKRN,EAKYO,CADyB,EAA5BC,sBACyChB,GAgBzD,OACE,wBACEiB,KAAK,SACLC,UAAWC,IAAG,SAAU,CACtB,UAAmB,wBAARnB,EACX,aAAsB,mBAARA,EACd,aAAsB,YAARA,EACd,YAAqB,UAARA,EACb,YAAqB,UAARA,GAAmC,KAAhBC,EAChC,WAAYA,IAAgBD,IAE9BoB,QAzBiB,WAEjBlB,EA7BqB,UA4BnBF,EACaA,EAEA,IAGjBI,EAAeC,GAnCU,YAqCrBL,GACFI,EAAe,YAAID,GAAakB,YAKlC,SAYIrB,KCvDKsB,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWN,EAAwBM,EAClCC,KAAI,SAAAC,GAAI,MAAK,CAAEC,GAAIH,EAAgBI,QAAQF,GAAQ,EAAGZ,KAAMY,MAElDG,EAAO,CAClB,sBACA,iBACA,UACA,SAGIC,EAAU,UAAID,GAAMJ,KAAI,SAAAC,GAAI,MAChC,CAAEC,GAAIE,EAAKD,QAAQF,GAAQ,EAAGZ,KAAMY,MAGzBK,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAO7B,EAAP,KAAoBC,EAApB,KACA,EAAsC4B,mBAASd,GAA/C,mBAAOb,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKc,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAf,SACGU,EAAQL,KAAI,SAAAvB,GAAG,OACd,cAAC,EAAD,CAEEA,IAAKA,EAAIY,KACTX,YAAaA,EACbC,eAAgBA,EAChBC,YAAaA,EACbC,eAAgBA,EAChBY,sBAAuBA,EAPzB,SASIhB,GARGA,EAAIyB,SAaf,6BACGtB,EAAYoB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAAmCA,EAAKZ,MAAhBY,EAAKC,aCrDvCM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.08757aa5.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\n\nconst ACTION_FIELD_ALPHABET = 'Sort alphabetically';\nconst ACTION_FIELD_LENGTH = 'Sort by length';\nconst ACTION_FIELD_REVERSE = 'Reverse';\nconst ACTION_FIELD_RESET = 'Reset';\n\nfunction getGoodsToRend(goods, field) {\n  const goodsToRend = [...goods];\n\n  if (field) {\n    goodsToRend.sort((good1, good2) => {\n      switch (field) {\n        case ACTION_FIELD_ALPHABET:\n\n          return good1.name.localeCompare(good2.name);\n        case ACTION_FIELD_LENGTH:\n\n          return good1.name.length - good2.name.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return goodsToRend;\n}\n\nexport const Button = ({ btn, searchField, setSearchField, goodsRender,\n  setGoodsRender, goodsFromServerModObj }) => {\n  const goodsToSet = getGoodsToRend(goodsFromServerModObj, btn);\n\n  const setFieldFunc = () => {\n    if (btn !== ACTION_FIELD_RESET) {\n      setSearchField(btn);\n    } else {\n      setSearchField('');\n    }\n\n    setGoodsRender(goodsToSet);\n\n    if (btn === ACTION_FIELD_REVERSE) {\n      setGoodsRender([...goodsRender].reverse());\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={cn('button', {\n        'is-info': btn === 'Sort alphabetically',\n        'is-success': btn === 'Sort by length',\n        'is-warning': btn === 'Reverse',\n        'is-danger': btn === 'Reset',\n        'is-hidden': btn === 'Reset' && searchField === '',\n        'is-light': searchField !== btn,\n      })}\n      onClick={setFieldFunc}\n    >\n      { btn }\n    </button>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { Button } from './components/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const goodsFromServerModObj = goodsFromServer\n  .map(item => ({ id: goodsFromServer.indexOf(item) + 1, name: item }));\n\nexport const btns = [\n  'Sort alphabetically',\n  'Sort by length',\n  'Reverse',\n  'Reset',\n];\n\nconst buttons = [...btns].map(item => (\n  { id: btns.indexOf(item) + 1, name: item }\n));\n\nexport const App = () => {\n  const [searchField, setSearchField] = useState('');\n  const [goodsRender, setGoodsRender] = useState(goodsFromServerModObj);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {buttons.map(btn => (\n          <Button\n            key={btn.id}\n            btn={btn.name}\n            searchField={searchField}\n            setSearchField={setSearchField}\n            goodsRender={goodsRender}\n            setGoodsRender={setGoodsRender}\n            goodsFromServerModObj={goodsFromServerModObj}\n          >\n            { btn }\n          </Button>\n        ))}\n      </div>\n\n      <ul>\n        {goodsRender.map(item => (\n          <li data-cy=\"Good\" key={item.id}>{ item.name }</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}