{"version":3,"sources":["components/Button/Button.jsx","assets/arrsBtnsGoodsInStrs.js","helpersfuncs/getBtnGoodsObjArrs.js","App.jsx","helpersfuncs/getGoodsToRend.js","index.jsx"],"names":["Button","btn","searchField","clearStrSearchField","setSearchField","isReversed","goodsRender","setIsReversed","setGoodsRender","type","className","cn","onClick","prev","Math","round","random","goodsFromServer","btns","goodsFromServerModObj","map","item","id","indexOf","name","buttons","App","useState","replace","goodsToSet","goods","field","goodsToRend","sort","good1","good2","localeCompare","length","getGoodsToRend","useEffect","reverse","ReactDOM","render","document","getElementById"],"mappings":"gPAMaA,EAAS,SAAC,GAEC,IAFCC,EAEF,EAFEA,IAAKC,EAEP,EAFOA,YAAaC,EAEpB,EAFoBA,oBACzCC,EACqB,EADrBA,eAA6BC,GACR,EADLC,YACK,EADQD,YAAYE,EACpB,EADoBA,cACpB,EAArBC,eAiBA,OACE,wBACEC,KAAK,SACLC,UAAWC,IAAG,SAAU,CACtB,UAAmB,wBAARV,EACX,aAAsB,mBAARA,EACd,aAAsB,YAARA,EACd,YAAqB,UAARA,EACb,YAAqB,UAARA,GAAmC,KAAhBC,EAChC,WAAaD,IAAQE,GAA+B,YAARF,GAChC,YAARA,IAAsBI,IAE5BO,QA5BiB,WACnB,OAAQX,GACN,IARuB,UASrBM,GAAc,SAAAM,GAAI,OAAKA,KACvB,MACF,IAVqB,QAWnBN,GAAc,GACdH,EAAe,IACf,MACF,QACEG,GAAc,GACdH,EAAeH,EAAMa,KAAKC,MAAsB,IAAhBD,KAAKE,aAMzC,SAaIf,KCvCKgB,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAO,CAClB,sBACA,iBACA,UACA,SCfWC,EACXF,EAAgBG,KAAI,SAAAC,GAAI,MACxB,CAAEC,GAAIL,EAAgBM,QAAQF,GAAQ,EAAGG,KAAMH,MAEpCI,EAAUP,EAAKE,KAAI,SAAAC,GAAI,MAClC,CAAEC,GAAIJ,EAAKK,QAAQF,GAAQ,EAAGG,KAAMH,MCC/B,IAAMK,EAAM,WACjB,MAAsCC,mBAAS,IAA/C,mBAAOzB,EAAP,KAAoBE,EAApB,KACA,EACEuB,mBAASR,GADX,mBAAOb,EAAP,KAAoBE,EAApB,KAEA,EAAoCmB,oBAAS,GAA7C,mBAAOtB,EAAP,KAAmBE,EAAnB,KAEMJ,EAAsBD,EAAY0B,QAAQ,MAAO,IACjDC,ECdD,SAAwBC,EAAOC,GACpC,IAAMC,EAAW,YAAOF,GAmBxB,OAfIC,GACFC,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQJ,GACN,IANwB,sBAQtB,OAAOG,EAAMV,KAAKY,cAAcD,EAAMX,MACxC,IARsB,iBAUpB,OAAOU,EAAMV,KAAKa,OAASF,EAAMX,KAAKa,OACxC,QACE,OAAO,MAKRL,EDNYM,CAAenB,EAAuBhB,GAUzD,OARAoC,qBAAU,WAIN/B,EAHGH,EAGY,SAAAQ,GAAI,OAAI,YAAIA,GAAM2B,WAFlBX,KAIhB,CAAC3B,EAAaG,IAGf,sBAAKK,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAf,SACGe,EAAQL,KAAI,SAAAnB,GAAG,OACd,cAAC,EAAD,CAEEA,IAAKA,EAAIuB,KACTtB,YAAaA,EACbC,oBAAqBA,EACrBC,eAAgBA,EAChBE,YAAaA,EACbE,eAAgBA,EAChBH,WAAYA,EACZE,cAAeA,EATjB,SAWIN,GAVGA,EAAIqB,SAef,6BACGhB,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAAmCA,EAAKG,MAAhBH,EAAKC,aE5CvCmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.827b6a21.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\n\nconst ACTION_FIELD_REVERSE = 'Reverse';\nconst ACTION_FIELD_RESET = 'Reset';\n\nexport const Button = ({ btn, searchField, clearStrSearchField,\n  setSearchField, goodsRender, isReversed, setIsReversed,\n  setGoodsRender }) => {\n  const setFieldFunc = () => {\n    switch (btn) {\n      case ACTION_FIELD_REVERSE:\n        setIsReversed(prev => !prev);\n        break;\n      case ACTION_FIELD_RESET:\n        setIsReversed(false);\n        setSearchField('');\n        break;\n      default:\n        setIsReversed(false);\n        setSearchField(btn + Math.round(Math.random() * 100));\n        break;\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={cn('button', {\n        'is-info': btn === 'Sort alphabetically',\n        'is-success': btn === 'Sort by length',\n        'is-warning': btn === 'Reverse',\n        'is-danger': btn === 'Reset',\n        'is-hidden': btn === 'Reset' && searchField === '',\n        'is-light': (btn !== clearStrSearchField && btn !== 'Reverse')\n        || (btn === 'Reverse' && !isReversed),\n      })}\n      onClick={setFieldFunc}\n    >\n      { btn }\n    </button>\n  );\n};\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const btns = [\n  'Sort alphabetically',\n  'Sort by length',\n  'Reverse',\n  'Reset',\n];\n","import { goodsFromServer, btns } from '../assets/arrsBtnsGoodsInStrs';\n\nexport const goodsFromServerModObj\n= goodsFromServer.map(item => (\n  { id: goodsFromServer.indexOf(item) + 1, name: item }));\n\nexport const buttons = btns.map(item => (\n  { id: btns.indexOf(item) + 1, name: item }\n));\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState, useEffect } from 'react';\nimport { Button } from './components/Button';\nimport { goodsFromServerModObj, buttons }\nfrom './helpersfuncs/getBtnGoodsObjArrs';\nimport { getGoodsToRend } from './helpersfuncs/getGoodsToRend';\n\nexport const App = () => {\n  const [searchField, setSearchField] = useState('');\n  const [goodsRender, setGoodsRender]\n  = useState(goodsFromServerModObj);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const clearStrSearchField = searchField.replace(/\\d/g, '');\n  const goodsToSet = getGoodsToRend(goodsFromServerModObj, clearStrSearchField);\n\n  useEffect(() => {\n    if (!isReversed) {\n      setGoodsRender(goodsToSet);\n    } else {\n      setGoodsRender(prev => [...prev].reverse());\n    }\n  }, [searchField, isReversed]);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        {buttons.map(btn => (\n          <Button\n            key={btn.id}\n            btn={btn.name}\n            searchField={searchField}\n            clearStrSearchField={clearStrSearchField}\n            setSearchField={setSearchField}\n            goodsRender={goodsRender}\n            setGoodsRender={setGoodsRender}\n            isReversed={isReversed}\n            setIsReversed={setIsReversed}\n          >\n            { btn }\n          </Button>\n        ))}\n      </div>\n\n      <ul>\n        {goodsRender.map(item => (\n          <li data-cy=\"Good\" key={item.id}>{ item.name }</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","\nexport function getGoodsToRend(goods, field) {\n  const goodsToRend = [...goods];\n  const ACTION_FIELD_ALPHABET = 'Sort alphabetically';\n  const ACTION_FIELD_LENGTH = 'Sort by length';\n\n  if (field) {\n    goodsToRend.sort((good1, good2) => {\n      switch (field) {\n        case ACTION_FIELD_ALPHABET:\n\n          return good1.name.localeCompare(good2.name);\n        case ACTION_FIELD_LENGTH:\n\n          return good1.name.length - good2.name.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return goodsToRend;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}